## nova controller node##

#
[root@controller ~]# mysql -u root -p

#
MariaDB [(none)]> CREATE DATABASE nova_api;
MariaDB [(none)]> CREATE DATABASE nova;
MariaDB [(none)]> CREATE DATABASE nova_cell0;

#
MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';

MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';

MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';
  

#
[ostack@controller ~]$ . admin-openrc
[ostack@controller ~]$ openstack user create --domain default --password-prompt nova

#
[ostack@controller ~]$ openstack role add --project service --user nova admin

#
[ostack@controller ~]$ openstack service create --name nova \
>   --description "ust OpenStack Compute" compute

#
[ostack@controller ~]$ openstack endpoint create --region RegionOne \
>   compute public http://controller:8774/v2.1

[ostack@controller ~]$ openstack endpoint create --region RegionOne \
>   compute internal http://controller:8774/v2.1

[ostack@controller ~]$ openstack endpoint create --region RegionOne \
>   compute admin http://controller:8774/v2.1

#
[root@controller ~]# dnf -y install openstack-nova-api openstack-nova-conductor openstack-nova-novncproxy openstack-nova-scheduler

#
[root@controller ~]# vi /etc/nova/nova.conf

[DEFAULT]
# ...
enabled_apis = osapi_compute,metadata
transport_url = rabbit://openstack:YOUR_RABBIT_PASS@controller:5672/
my_ip = 10.0.0.11

[api_database]
# ...
connection = mysql+pymysql://nova:YOURNOVA_DBPASS@controller/nova_api

[database]
# ...
connection = mysql+pymysql://nova:YOUR_NOVA_DBPASS@controller/nova

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
www_authenticate_uri = http://controller:5000/
auth_url = http://controller:5000/
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = YOUR_NOVA_PASS

[neutron]
# ...
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = YOUR_NEUTRON_PASS
service_metadata_proxy = true
metadata_proxy_shared_secret = YOUR_METADATA_SECRET

[vnc]
enabled = true
# ...
server_listen = $my_ip
server_proxyclient_address = $my_ip

[glance]
# ...
api_servers = http://controller:9292

[oslo_concurrency]
# ...
lock_path = /var/lib/nova/tmp

[placement]
# ...
region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://controller:5000/v3
username = placement
password = YOUR_PLACEMENT_PASS

#save&&exit

#fw add port
[root@controller ~]# firewall-cmd --permanent --add-port={6080,6081,6082,8774,8775,8778}/tcp

[root@controller ~]# firewall-cmd --reload

#populate nova-api db
[root@controller ~]# su -s /bin/sh -c "nova-manage api_db sync" nova

#register ce110 db
[root@controller ~]# su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova

#create ce111 cell
[root@controller ~]# su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova

#populate nova db
[root@controller ~]# su -s /bin/sh -c "nova-manage db sync" nova

#verify nova cell0 & cell1 are registered correctly
[root@controller ~]# su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova
+-------+--------------------------------------+---------------+-------------------------------------------------+----------+
|  Name |                 UUID                 | Transport URL |               Database Connection               | Disabled |
+-------+--------------------------------------+---------------+-------------------------------------------------+----------+
| cell0 | 00000000-0000-0000-0000-000000000000 |     none:/    | mysql+pymysql://nova:****@controller/nova_cell0 |  False   |
| cell1 | 8bbe3386-b680-4c27-b4bb-8e55444ea0d6 |    rabbit:    |    mysql+pymysql://nova:****@controller/nova    |  False   |
+-------+--------------------------------------+---------------+-------------------------------------------------+----------+


#enable&&start compute services
root@controller ~]# systemctl enable \
>     openstack-nova-api.service \
>     openstack-nova-scheduler.service \
>     openstack-nova-conductor.service \
>     openstack-nova-novncproxy.service

[root@controller ~]# systemctl start \
>     openstack-nova-api.service \
>     openstack-nova-scheduler.service \
>     openstack-nova-conductor.service \
>     openstack-nova-novncproxy.service




## compute node ##

#enable ussuri and powertools repos
[root@compute ~]# dnf -y install centos-release-openstack-ussuri
[root@compute ~]# sed -i -e "s/enabled=1/enabled=0/g" /etc/yum.repos.d/CentOS-OpenStack-ussuri.repo
[root@compute ~]# dnf --enablerepo=centos-openstack-ussuri -y upgrade
#install nova-compute and selinux packs
[root@compute ~]# dnf --enablerepo=centos-openstack-ussuri,powertools -y install openstack-nova-compute openstack-selinux


#
[root@compute ~]# vi /etc/nova/nova.conf

[DEFAULT]

enabled_apis = osapi_compute,metadata
transport_url = rabbit://openstack:YOUR_RABBIT_PASS@controller
my_ip = 192.168.8.31
log_dir = /var/log/nova
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver
state_path = /var/lib/nova[root@compute ~]#

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]

www_authenticate_uri = http://controller:5000/
auth_url = http://controller:5000/
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = YOUR_NOVA_PASS

[neutron]
# ...
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = YOUR_NEUTRON_PASS

[vnc]
# ...
enabled = true
server_listen = 0.0.0.0
server_proxyclient_address = $my_ip
novncproxy_base_url = http://controller:6080/vnc_auto.html

[glance]
# ...
api_servers = http://controller:9292

[oslo_concurrency]
# ...
lock_path = /var/lib/nova/tmp

[placement]
# ...
region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://controller:5000/v3
username = placement
password = YOUR_PLACEMENT_PASS

[libvirt]
#...
#if the command below returns 0 => virt_type=qemu
#else => virt_type=kvm
#[root@compute ~]# egrep -c '(vmx|svm)' /proc/cpuinfo
virt_type=qemu

[wsgi]
api_paste_config = /etc/nova/api-paste.ini

#save&exit

#
[root@compute ~]# chmod 640 /etc/nova/nova.conf 
[root@compute ~]# chgrp nova /etc/nova/nova.conf

#
[root@compute ~]# semanage port -a -t http_port_t -p tcp 8778
[root@compute ~]# firewall-cmd --permanent --add-port={6080,6081,6082,8774,8778}/tcp
[root@compute ~]# firewall-cmd --permanent --add-port=5900-5999/tcp
[root@compute ~]# firewall-cmd --reload


#
[root@compute ~]# systemctl enable libvirtd.service openstack-nova-compute.service
[root@compute ~]# systemctl start libvirtd.service openstack-nova-compute.service



## controller node ##

#
[ostack@controller ~]$ . admin-openrc 
[ostack@controller ~]$ openstack compute service list --service nova-compute
+----+--------------+---------+------+---------+-------+----------------------------+
| ID | Binary       | Host    | Zone | Status  | State | Updated At                 |
+----+--------------+---------+------+---------+-------+----------------------------+
|  5 | nova-compute | compute | nova | enabled | up    | 2021-06-01T18:16:23.000000 |
+----+--------------+---------+------+---------+-------+----------------------------+

#
[root@controller ~]# su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova
Found 2 cell mappings.
Skipping cell0 since it does not contain hosts.
Getting computes from cell 'cell1': 8bbe3386-b680-4c27-b4bb-8e55444ea0d6
Found 0 unmapped computes in cell: 8bbe3386-b680-4c27-b4bb-8e55444ea0d6























